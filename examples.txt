Examples:
1. Media (Video/Audio) Streaming - Make the server listen to GET/POST/REQUEST for video and audio.
<?Php
	include('normiefication.php');
	$task = new normiefication\task;
	$task('media', 'stream'); // http://localhost/thisFile.php?stream=path/to/my/video.mp4
?>

2. Any File (images/programs/text files/etc) - Make the server listen to GET/POST/REQUEST for any file.
<?Php
	include('normiefication.php');
	$task = new normiefication\task;
	$cacheFiles = true;
	$task('file', 'location', [$cacheFiles]);
?>

3. Image Thumbnail - Make the server listen to GET/POST/REQUEST for image files and create thumbnail.
<?Php
	include('normiefication.php');
	$task = new normiefication\task;
	$size = 200; // px
	$adjustmentDimension = 'width'; // 'width', 'height', or 'auto' to choose the largest dimension
	$cacheFiles = true;
	$task('urlthumb', 'location', [$size, $adjustmentDimension, $cacheFiles]);
?>

4. Zip Content - Make the server listen to GET/POST/REQUEST to get Zipped content.
<?Php
	include('normiefication.php');
	$task = new normiefication\task;
	$cacheFiles = true;
	$task('zip', 'zipFile, zipContent', [$cacheFiles]);
?>

5. Zip Content - Make the server listen to GET/POST/REQUEST to create thumbnail from Zipped image file.
<?Php
	include('normiefication.php');
	$task = new normiefication\task;
	$size = 200; // px
	$adjustmentDimension = 'width'; // 'width', 'height', or 'auto' to choose the largest dimension
	$cacheFiles = true;
	$task('zipthumb', 'zipFile, zipContent', [$size, $adjustmentDimension, $cacheFiles]);
?>

6. Combining all in one script:
<?Php
	include('normiefication.php');
	$fileImageNoCache = true; // Do not cache file?
	$task = new normiefication\task;
	$task('media', 'media', 'GET');

	// constraint can be 'width' / 'height' / 'auto'
	// auto - constrain the largest dimension to px size

	$task('file', 'file', 'GET', [$fileImageNoCache]);
	$task('urlthumb', 'th', 'GET', [200, 'auto', $fileImageNoCache]);

	$task('zip', 'zip, content', 'GET', [$fileImageNoCache]);
	$task('zipthumb', 'zip_th, content_th', 'GET', [200, 'auto', $fileImageNoCache]);
?>

7. Implementing File Manager:
<?Php
include('normiefication.php');
normiefication\filemanager::$AUTORUN	= false;		// RUN FILE MANAGER IMMEDIATELY WHEN INSTANTIATED
//normiefication\task::secure();						// ENSURE SSL CONNECTION

$f = new normiefication\filemanager;					// INSTANTIATE FILE MANAGER
$f->denied_response_parameters ( 503, 'Unavailable' );	// RESPONSE TO DENIED/UNTRUSTED HOSTS
//$f->allow_full_access_from('192.168.1.2');			// DEVICES THAT WILL HAVE FULL ACCESS TO FILE MANAGER
//$f->trusted_hosts ( 'example.com' );					// DEVICES THAT WILL HAVE ACCESS TO FILE MANAGER UI
//$f->script_paths ( 'example.com' );					// DEVICES THAT WILL HAVE ACCESS TO REMOTE SCRIPT

$f->DB_alerts_disabled					= false;		// DISABLE DATABASE ALERTS
$f->no_cache							= false;		// STOP CACHING IMAGES?
$f->allowaccess							= true;			// ALLOW LIMITED ACCESS TO FILE MANAGER
$f->showFullPageURL						= false;		// SHOW HOSTNAME IN PAGE LINKS
$f->remote_update						= false;		// ALLOW REMOTE UPDATES
$f->remote_autoupdate					= false;		// ALLOW REMOTE AUTOMATIC UPDATES

$f->workingDirectory					= 'files';		// PUBLIC WORKING DIRECTORY
$f->AJAXElement							= 'div.ajax';	// TARGET ELEMENT OF FILE MANAGER AJAX LINKS
$f->AJAXOverlayElement					= '.overlay';	// TARGET ELEMENT OF FILE MANAGER AJAX IMAGE LINKS
$f->otherExtensions_add					= ['example'];	// OTHER FILE EXTENSIONS TO DETECT
														// USE "$f->otherExtensions" TO OVERRIDE LIST
$f->RemoteUpdate_NewScript				= '';			// REMOTE UPDATE SCRIPT
$f->autoupdate_sourcefile				= '';			// PHP SCRIPT TO UPLOAD TO THE REMOTE FILE

// DATABASE CREDENTIALS:
$f->DB_username							= 'root';		// USERNAME
$f->DB_password							= '';			// PASSWORD
$f->DB_host								= 'localhost';	// HOSTNAME
$f->DB_database							= 'test';		// DATABASE

// IF YOU WANT TO CUSTOMIZE YOUR QUERY AND URL REQUEST (i.e. http://localhost/?uid=2&n=filename)
// LEAVE FIELDS BLANK TO DISABLE THIS QUERY METHOD
$f->DB_CustomQuery_AliasedRequest		= 'uid, n';
$f->DB_CustomQuery						=				// PREPARED STATEMENT WILL BIND $_REQUEST['KEY'] TO :KEY
<<<QUERY
	SELECT data, CONCAT_WS ( ".", name, extension ) AS filename FROM file
	WHERE ( id = :uid AND id LIKE :uid ) AND ( name = :n AND name LIKE :n ) LIMIT 1
QUERY;
$f->DB_CustomQuery_Action				= NULL;			// WHAT YOU WANT TO DO WITH THE RESULTS
/*
				i.e.
				function ( $result )
				{
					if ( count ( $result ) < 1 ) normiefication\task::resource ( "error404" );
					$contentType = ( new finfo ( FILEINFO_MIME_TYPE ) )->buffer ( $result[0]['data'] );
					if ( stripos ( $contentType, 'text' ) === false )
					{
						header ("Content-Type: {$contentType}");
						header ("Content-Disposition: FileName=\"{$result[0]['filename']}\"");
						echo $result[0]['data'];
						die;
					}
					// ECHO AND RETURN THE DATA BY DEFAULT
					echo $result[0]['data'];
					die;
				}
*/

// IF YOU WANT TO SIMPLY USE THE COLUMN NAME IN THE DATABASE (i.e. http://localhost/?id=2)
// LEAVE FIELDS BLANK TO DISABLE THIS QUERY METHOD
$f->DB_WhereColumnName_Request			= 'id';

// IF YOU WANT A CUSTOMIZED URL REQUEST AND YOU HAVE A COLUMN FOR FILENAMES (http://localhost/?imid=2)
// LEAVE FIELDS BLANK TO DISABLE THIS QUERY METHOD
$f->DB_WhereColumnName					= 'id';
$f->DB_WhereColumnName_AliasedRequest	= 'imid';
$f->DB_SelectFilenameColumn				= 'CONCAT_WS ( ".", name, extension )';

// DATA COLUMN AND TABLE FOR THE LAST TWO METHODS (LEAVE BLANK IF YOU'RE NOT USING ANY OF THE TWO)
$f->DB_SelectDataColumn					= 'data';
$f->DB_Table							= 'file';

// OTHER REQUEST VARIABLES
$f->CallURL_RequestVariable				= 'remote';					//
$f->RemoteUpdate_RequestVariable		= 'update';					//
$f->WebPage_RequestVariable				= 'page';					//
$f->AJAXFileFetch_RequestVariable		= 'fetch';					//
$f->DataLocation_RequestVariable		= 'dir';					//
$f->FullImage_RequestVariable			= 'full';					//
$f->Thumbsize_RequestVariable			= 'thumbsize';				//
$f->File_RequestVariable				= 'filename';				//
$f->Encode_RequestVariable				= 'encode';					//
$f->Stream_RequestVariable				= 'media';					//
$f->URLThumb_RequestVariable			= 'th';						//
$f->Resource_RequestVariable			= 'resource';				//
$f->ZipFile_RequestVariable				= 'zipfile';				//
$f->ZipContent_RequestVariable			= 'content';				//
$f->ZipImageContent_RequestVariable		= 'zipimg';					//
$f->ZipThumbSource_RequestVariable		= 'zipthfile';				//
$f->ZipThumbContent_RequestVariable		= 'zipthimg';				//
$f->Script_RequestVariable				= 'script';					//
$f->ScriptParameter_RequestVariables	= '*';						//
$f->RangeStart_RequestVariable			= 'start';					//
$f->RangeEnd_RequestVariable			= 'end';					//
$f->WatchMedia_RequestVariable			= 'watch';					//
$f->ListenToMedia_RequestVariable		= 'listen';					//

// CLASS NAME TO USE FOR ANCHORS
$f->anchor_class_name					= "ajax";					//

// PROPERTIES FOR THE IMAGE PREVIEW
$f->display_image_properties			= "class='imagepreview'";	//

// ADJUST THUMBNAIL width/height/auto
$f->thumbnail_adjustment_orientation	= 'auto';					//
$f->thumbsize							= 100;						//
$f->mobile_size_multiplier				= 2;						//
$f->file_display_limit					= 0;						//
$f->show_home_dir						= true;						//
$f->default_video_controls				= false;					//
$f->show_audio_controls					= true;						//

// APPLY GZIP COMPRESSION
normiefication\task::compress();

// RUN FILE MANAGER
$f();

echo <<<BODY
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<link rel='icon' href='?resource=icon'/>
		<title>{$f->frontHost}</title>
		<link rel='stylesheet' href='?script=css' type='text/css'/>
		<script type='text/javascript' src='?resource=jquery331'></script>
		<script type='text/javascript' src='?script=ui'></script>
		<script type='text/javascript'>
			AJAXOverlayControls("div.overlay");
			backgroundImage("?resource=bg");
			AJAXForm('div.ajax');
		</script>
		<style>
			body {
				background:				url(?resource=bg) no-repeat;
				background-color:		black;
				background-attachment:	fixed;
				background-position:	center;
				text-shadow:			2px 2px 4px #000000;
			}
		</style>
	</head>
	<body link = '#FFFFFF' alink = '#FFFFFF' vlink = '#FFFFFF' >
		<div class='ajax'>{$f->files}</div>
		<div class='overlay'>{$f->imdispl}</div>
	</body>
</html>
BODY;
?>